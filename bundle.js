(()=>{"use strict";var t={274:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Investment=void 0,e.Investment=class{constructor(t,e,n,o,r,l,u,d,h){this.name=t,this.worth=e,this.worthText=n,this.ownedStocks=o,this.ownedStocksText=r,this.numberInput=l,this.buyInput=u,this.sellInput=d,this.total=h}Buy(t){return this.numberInput&&t>=this.worth*parseInt(this.numberInput.value)&&(t-=this.worth*parseInt(this.numberInput.value),this.ownedStocks+=parseInt(this.numberInput.value),this.numberInput.nodeValue),t}Sell(t){return this.numberInput&&this.ownedStocks>=parseInt(this.numberInput.value)&&(t+=this.worth*parseInt(this.numberInput.value),this.ownedStocks-=parseInt(this.numberInput.value)),t}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var l=e[o]={exports:{}};return t[o](l,l.exports,n),l.exports}(()=>{const t=n(274);let e,o,r,l,u,d,h,s,m,i,a,c,I=1e3;const w=["Netto","Legoland","Humlegaarden","Curbfood 2","Minecraft","Elon Musk","Carls Tandlæge","Amazon","Vand Inc.","Blockbuster","Minecraft 2","Sprite","Pepsi","Bitcoin","Dunder Mifflin","PH lamper","Bogense Havn","Rasmus Aktie Spil","MySpace","r/HackerNews"];function y(t){I=t.Buy(I),v()}function g(t){I=t.Sell(I),v()}function p(t){I=t,o&&(o.style.display="none"),r&&(r.style.display="initial"),v(),S()}e=document.getElementById("pengeDisplay"),o=document.getElementById("startScreen"),r=document.getElementById("mainScreen"),l=document.getElementById("easyButton"),u=document.getElementById("mediumButton"),d=document.getElementById("hardButton"),i=new t.Investment("Trackunit",100,document.getElementById("lowWorth"),0,document.getElementById("lowOwned"),document.getElementById("lowNum"),document.getElementById("lowBuy"),document.getElementById("lowSell"),document.getElementById("lowTotal")),a=new t.Investment("Microsoft",500,document.getElementById("MedWorth"),0,document.getElementById("MedOwned"),document.getElementById("MedNum"),document.getElementById("MedBuy"),document.getElementById("MedSell"),document.getElementById("MedTotal")),c=new t.Investment("Curbfood",2e3,document.getElementById("HighWorth"),0,document.getElementById("HighOwned"),document.getElementById("HighNum"),document.getElementById("HighBuy"),document.getElementById("HighSell"),document.getElementById("HighTotal")),h=document.getElementById("lowTitle"),s=document.getElementById("medTitle"),m=document.getElementById("highTitle"),l&&(l.onclick=()=>p(100)),u&&(u.onclick=()=>p(1e3)),d&&(d.onclick=()=>p(1e4)),i.buyInput&&(i.buyInput.onclick=()=>y(i)),i.sellInput&&(i.sellInput.onclick=()=>g(i)),i.numberInput&&(i.numberInput.onchange=()=>v()),a.buyInput&&(a.buyInput.onclick=()=>y(a)),a.sellInput&&(a.sellInput.onclick=()=>g(a)),a.numberInput&&(a.numberInput.onchange=()=>v()),c.buyInput&&(c.buyInput.onclick=()=>y(c)),c.sellInput&&(c.sellInput.onclick=()=>g(c)),c.numberInput&&(c.numberInput.onchange=()=>v());let k,b=1.05,B=1.1,T=1.2,E=[],x=[],M=[];function S(){if(E.push(i.worth),f(E,"lowChart"),Math.random()>=.7&&(b=b>1?.94:1.06),i.worth*=b,i.worth=Math.round(i.worth),x.push(a.worth),f(x,"medChart"),Math.random()>=.65&&(B=B>1?.6:1.4),a.worth*=B,a.worth=Math.round(a.worth),M.push(c.worth),f(M,"highChart"),Math.random()>=.4&&(T=T>1?.2:2),c.worth*=T,c.worth=Math.round(c.worth),i.worth<=30){let t=document.getElementById("low");(null==t?void 0:t.style)&&(t.style.backgroundColor="rgb(240, 55, 55)"),setTimeout((()=>{E=[],i.ownedStocks=0,i.worth=100*Math.random(),i.worth=Math.round(i.worth),h&&(h.innerText=w[Math.floor(Math.random()*w.length)]),(null==t?void 0:t.style)&&(t.style.backgroundColor="rgb(54, 54, 54)")}),1e3)}if(a.worth<=50){let t=document.getElementById("med");(null==t?void 0:t.style)&&(t.style.backgroundColor="rgb(240, 55, 55)"),setTimeout((()=>{x=[],a.ownedStocks=0,a.worth=1e3*Math.random(),a.worth=Math.round(a.worth),s&&(s.innerText=w[Math.floor(Math.random()*w.length)]),(null==t?void 0:t.style)&&(t.style.backgroundColor="rgb(54, 54, 54)")}),1e3)}if(c.worth<=50){let t=document.getElementById("high");(null==t?void 0:t.style)&&(t.style.backgroundColor="rgb(240, 55, 55)"),setTimeout((()=>{M=[],c.ownedStocks=0,c.worth=5e3*Math.random(),c.worth=Math.round(c.worth),m&&(m.innerText=w[Math.floor(Math.random()*w.length)]),(null==t?void 0:t.style)&&(t.style.backgroundColor="rgb(54, 54, 54)")}),1e3)}v(),setTimeout((()=>{S()}),1e3)}function v(){e&&(e.innerText="Du har "+I+" dkk"),i.ownedStocksText&&i.worthText&&i.total&&(i.worthText.innerText="Værd "+i.worth+" per styk",i.ownedStocksText.innerText="Ejer "+i.ownedStocks+" aktier",i.total.innerText="("+i.worth*parseInt(i.numberInput.value)+" dkk)"),a.ownedStocksText&&a.worthText&&a.total&&(a.worthText.innerText="Værd "+a.worth+" per styk",a.ownedStocksText.innerText="Ejer "+a.ownedStocks+" aktier",a.total.innerText="("+a.worth*parseInt(a.numberInput.value)+" dkk)"),c.ownedStocksText&&c.worthText&&c.total&&(c.worthText.innerText="Værd "+c.worth+" per styk",c.ownedStocksText.innerText="Ejer "+c.ownedStocks+" aktier",c.total.innerText="("+c.worth*parseInt(c.numberInput.value)+" dkk)")}function f(t,e){let n=[];t.forEach(((e,o)=>{n.push(t[o]-Math.min(...t))})),console.log("y: "+n);let o=[];n.forEach(((t,e)=>{o.push(e+1)})),k=document.getElementById(e);const r=k.getContext("2d");if(!r)return;r.clearRect(0,0,180,100);let l=180/Math.max(...o);l+=l/o.length;const u=100/Math.max(...n);r.beginPath(),o.forEach(((t,e)=>{r.lineTo(o[e]*l-l,100-n[e]*u)})),r.strokeStyle="white",r.lineWidth=1.5,r.stroke()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,